name: Build Tauri Bundle/Installer

on:
  push:
    branches: [ "main" ]
    paths-ignore:
    - README.md

  pull_request:
    branches: [ "main" ]
    paths-ignore:
    - README.md
  
  workflow_dispatch:

jobs:
  build-tauri-binaries:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
        
      - name: Linux - Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: Yarn Install
        run: yarn && yarn build
        
      - name: Download LOTYR Release
        uses: robinraju/release-downloader@v1.7
        with:
          repository: "opentourbuilder/lotyr"
          latest: true
          out-file-path: "resources"

      - name: Download Valhalla Tiles Release
        uses: robinraju/release-downloader@v1.7
        with:
          repository: "opentourbuilder/valhalla-tile"
          latest: true
          out-file-path: "resources"
      
      - name: Build
        uses: JonasKruckenberg/tauri-build@v1
        id: tauri_build
      
      - name: Linux - Upload Build Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux
          if-no-files-found: error
          path: |
            /home/runner/work/builder-v2/builder-v2/src-tauri/target/release/bundle/deb/*.deb
            /home/runner/work/builder-v2/builder-v2/src-tauri/target/release/bundle/appimage/*.AppImage
            
      - name: Windows - Upload Build Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows
          if-no-files-found: error
          path: D:\a\builder-v2\builder-v2\src-tauri\target\release\bundle\msi\*.msi
          
      - name: MacOS - Upload Build Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macos
          if-no-files-found: error
          path: /Users/runner/work/builder-v2/builder-v2/src-tauri/target/release/bundle/dmg/*.dmg
      
  release:
    needs: build-tauri-binaries
    runs-on: ubuntu-latest
    steps:

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          path: ~/artifact

      - name: Create Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: latest
          files: |
            /home/runner/artifact/linux/**/*.{deb,AppImage}
            /home/runner/artifact/windows/**/*.msi
            /home/runner/artifact/macos/**/*.dmg
